<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="all_categories" xml:space="preserve">
    <value>All Categories</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="article" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="avoid" xml:space="preserve">
    <value>Avoid</value>
  </data>
  <data name="back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="backoffice" xml:space="preserve">
    <value>Backoffice</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="btnClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="change_price" xml:space="preserve">
    <value>Change Price</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="delivery_order" xml:space="preserve">
    <value>Delivery order</value>
  </data>
  <data name="dine_in" xml:space="preserve">
    <value>Dine in</value>
  </data>
  <data name="discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="due" xml:space="preserve">
    <value>Due</value>
  </data>
  <data name="enter_address" xml:space="preserve">
    <value>Enter address</value>
  </data>
  <data name="enter_amount" xml:space="preserve">
    <value>Enter amount</value>
  </data>
  <data name="enter_customer_name" xml:space="preserve">
    <value>Enter customer name</value>
  </data>
  <data name="enter_phone" xml:space="preserve">
    <value>Enter phone</value>
  </data>
  <data name="entre_city" xml:space="preserve">
    <value>Enter city</value>
  </data>
  <data name="exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="expenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="expense_group" xml:space="preserve">
    <value>Expense Group</value>
  </data>
  <data name="guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="history" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="hold_invoice" xml:space="preserve">
    <value>Hold invoice</value>
  </data>
  <data name="insufficient_quantity" xml:space="preserve">
    <value>Insufficient quantity. Order quantity is greater than stock quantity</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>invoices</value>
  </data>
  <data name="items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="key_caps" xml:space="preserve">
    <value>Caps</value>
  </data>
  <data name="kitchen_display" xml:space="preserve">
    <value>Kitchen Display</value>
  </data>
  <data name="line_discount" xml:space="preserve">
    <value>Line Discount</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logoff" xml:space="preserve">
    <value>Logoff</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="minus" xml:space="preserve">
    <value>Minus</value>
  </data>
  <data name="modifier" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="no_invoices_found" xml:space="preserve">
    <value>No invoices found!</value>
  </data>
  <data name="no_stock_available" xml:space="preserve">
    <value>No stock available</value>
  </data>
  <data name="no_tax" xml:space="preserve">
    <value>NoTax</value>
  </data>
  <data name="numeric_keypad" xml:space="preserve">
    <value>Numeric keypad</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="open_drawel" xml:space="preserve">
    <value>Open Drawel</value>
  </data>
  <data name="order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="order_type" xml:space="preserve">
    <value>Order Type</value>
  </data>
  <data name="overall_discount" xml:space="preserve">
    <value>Overall Discount</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="payments" xml:space="preserve">
    <value>Payments</value>
  </data>
  <data name="payment_types" xml:space="preserve">
    <value>Payment types</value>
  </data>
  <data name="pay_full_amount" xml:space="preserve">
    <value>Pay full amount</value>
  </data>
  <data name="please_enter_items" xml:space="preserve">
    <value>Please enter item(s)</value>
  </data>
  <data name="please_select_items" xml:space="preserve">
    <value>Please select item(s)</value>
  </data>
  <data name="plus" xml:space="preserve">
    <value>Plus</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>price</value>
  </data>
  <data name="print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="printers" xml:space="preserve">
    <value>Printers</value>
  </data>
  <data name="print_invoice" xml:space="preserve">
    <value>Print Invoice</value>
  </data>
  <data name="print_kot" xml:space="preserve">
    <value>Print KOT</value>
  </data>
  <data name="print_last_invoice" xml:space="preserve">
    <value>Print las invoice</value>
  </data>
  <data name="print_to_kitchen" xml:space="preserve">
    <value>Print to kitchen</value>
  </data>
  <data name="purchase" xml:space="preserve">
    <value>Purchase</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="quick_cash_sale" xml:space="preserve">
    <value>Quick cash sale</value>
  </data>
  <data name="recall" xml:space="preserve">
    <value>Recall</value>
  </data>
  <data name="recall_invoice" xml:space="preserve">
    <value>Recall Invoice</value>
  </data>
  <data name="receipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="s" xml:space="preserve">
    <value>Pickup order</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="save_and_close" xml:space="preserve">
    <value>Save and close</value>
  </data>
  <data name="select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="select_order_type" xml:space="preserve">
    <value>Select order type</value>
  </data>
  <data name="select_table" xml:space="preserve">
    <value>Select Table</value>
  </data>
  <data name="service_charge" xml:space="preserve">
    <value>Service Charge</value>
  </data>
  <data name="service_tax" xml:space="preserve">
    <value>Service Tax</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="shop" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="supplier" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="tables" xml:space="preserve">
    <value>tables</value>
  </data>
  <data name="take_away" xml:space="preserve">
    <value>Take away</value>
  </data>
  <data name="tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="total_payable" xml:space="preserve">
    <value>TOTAL PAYABLE</value>
  </data>
  <data name="translate" xml:space="preserve">
    <value>Translate</value>
  </data>
  <data name="undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="unit_price" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="unit_product" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="waiter" xml:space="preserve">
    <value>Waiter</value>
  </data>
</root>